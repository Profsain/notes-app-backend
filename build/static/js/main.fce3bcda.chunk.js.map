{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","Notification","message","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","i","find","n","changeNote","returnedNote","catch","error","setTimeout","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","type","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"kMAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,sBAAwB,iBAE5B,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QADR,KAEE,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCPpCK,EAAU,kCAiBD,EAfA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCJ9BK,EAVM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OAAgB,OAAZA,EACO,KAGP,qBAAKd,UAAU,QAAf,SACKc,KC+FEC,EA/FH,WAEV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAIAC,qBAAU,WACRC,IAEGpB,MAAK,SAAAqB,GACJT,EAASS,QAEZ,IAGH,IAsBMC,EAAcP,EAChBJ,EACAA,EAAMY,QAAO,SAAAjC,GAAI,OAAuB,IAAnBA,EAAKG,aAsB9B,OACE,gCACE,kDAEA,cAAC,EAAD,CAAce,QAASS,IAEvB,yBAAQrB,QAAS,kBAAMoB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,SAEhC,6BACGO,EAAYE,KAAI,SAAClC,EAAMmC,GAAP,OACf,cAAC,EAAD,CAEEnC,KAAMA,EACNC,iBAAkB,kBAlCH,SAACc,GACxB,IAAMf,EAAOqB,EAAMe,MAAK,SAAAC,GAAC,OAAIA,EAAEtB,KAAOA,KAChCuB,EAAU,2BAAQtC,GAAR,IAAcG,WAAYH,EAAKG,YAE/C2B,EACUf,EAAIuB,GACX5B,MAAK,SAAA6B,GACJjB,EAASD,EAAMa,KAAI,SAAAlC,GAAI,OAAIA,EAAKe,KAAOA,EAAKf,EAAOuC,SAEpDC,OAAM,SAAAC,GACLb,EAAgB,YAAD,OACD5B,EAAKK,QADJ,qCAGfqC,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAI,GAAC,OAAIA,EAAEtB,KAAOA,SAkBRd,CAAiBD,EAAKe,MAFzCoB,QAMX,uBAAMQ,SA3DM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBzC,QAASkB,EACTwB,MAAM,IAAIC,MAAOC,cACjB9C,UAAW+C,KAAKC,SAAW,IAG7BrB,EACUgB,GACPpC,MAAK,SAAA6B,GACJjB,EAASD,EAAM+B,OAAOb,IACtBf,EAAW,QA+Cb,UACE,uBACE6B,KAAK,OACLC,MAAO/B,EACPgC,SApEkB,SAACX,GACzBpB,EAAWoB,EAAMY,OAAOF,UAqEpB,wBAAQD,KAAK,SAAb,yBC7FRI,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fce3bcda.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'Make note important' : 'make important'\r\n  \r\n  return (\r\n    <li className=\"note\">\r\n      {note.content} .\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n    \r\n  )\r\n}\r\nexport default Note;","import axios from \"axios\";\r\n\r\nconst baseUrl = 'http://localhost:3001/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update}","import React from \"react\"\r\n\r\nconst Notification = ({message}) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\nexport default Notification","import React, {useEffect, useState} from \"react\";\n// import NotesDB from \"./NotesDB\";\nimport './index.css';\nimport Note from \"./components/Note\";\nimport noteService from './services/notes'\nimport Notification from \"./components/Notification\";\n\n\nconst App = () => {\n  //state\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n   //Communicating with server using\n  //noteService module\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n  \n  //New note changes handler\n  const handleNoteChanges = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  //Add new notes handler\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n   \n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  //Handle show note button\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true)\n  \n  const toggleImportance = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changeNote = { ...note, important: !note.important }\n    \n    noteService \n      .update(id, changeNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `The note ${note.content} was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n    })\n  }\n\n  return (\n    <div>\n      <h1>Notes Taking App</h1>\n\n      <Notification message={errorMessage} />\n\n      <button onClick={() => setShowAll(!showAll)}>\n        Show {showAll ? 'Important' : 'All'}\n      </button>\n      <ul>\n        {notesToShow.map((note, i) =>\n          <Note\n            key={i}\n            note={note}\n            toggleImportance={() => toggleImportance(note.id)}\n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          type=\"text\"\n          value={newNote}\n          onChange={handleNoteChanges}\n        />\n        <button type=\"submit\">Save</button>\n      </form>\n      \n    </div>\n  )\n}\n\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}